<?php

/**
 * @file
 * egnyte_tabs module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\media\Entity\Media;
use Drupal\node\Entity\Node;
use Drupal\paragraphs\Entity\Paragraphs;




/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function egnyte_tabs_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.egnyte_tabs':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function egnyte_tabs_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__egnyte_tabs' => [
      'base hook' => 'paragraph',
    ],

    'paragraph__egnyte_tabs__item' => [
      'base hook' => 'paragraph',
    ],
    'paragraph__egnyte_tabs__tabs' => [
      'base hook' => 'paragraph',
    ],

  ];
}

function egnyte_tabs__theme_function() {
  $var =  &drupal_static(__FUNCTION__);
      if (!isset($var)) {
        // generate contents of static variable
        $var = 'Default';
      }
    return $var;
}


function egnyte_tabs_preprocess_paragraph__egnyte_tabs__tabs(&$variables) {
  $paragraph = $variables['elements']['#paragraph'];
  $arr = array();
  $variables['tab_title'] = &drupal_static('egnyte_tabs__theme_function');

  $variables['tab_title'] = 'cdc';

}



function egnyte_tabs_preprocess_paragraph__egnyte_tabs__item(&$variables) {
  
  $paragraph = $variables['elements']['#paragraph'];
  $node = $paragraph->field_egnyte_tabs__items_profile->getValue();
 // $variables['tab_links']= &drupal_static('egnyte_tabs__theme_function');



  $variables['tab_card'][0] = _tab_cards($node);
  $variables['job_title'] = $variables['tab_card'][0]['job_title'][0]['value'];
  $variables[ 'company'] = $variables['tab_card'][0]['company'][0]['value'];
  $variables['first_name'] = $variables['tab_card'][0]['first_name'][0]['value'];
  $variables['last_name'] = $variables['tab_card'][0]['last_name'][0]['value'];
  $variables['quote'] = $variables['tab_card'][0]['quote'][0]['value'];
  $variables['company_logo'] = $variables['tab_card'][0]['company_logo'];

  $variables['tab_links'] = $paragraph->get('field_egnyte_tabs__items_links');


 
}

function egnyte_tabs_preprocess_paragraph__egnyte_tabs(&$variables) {
  $paragraph = $variables['elements']['#paragraph'];

  
  $variables['tab_tile'] = &drupal_static('egnyte_tabs__theme_function');
 
}





function _tab_cards($node){

  $arr= array();
  
  if (!empty($node) ){
  
   $nodes = Node::load($node[0]["target_id"]);
   
   if (!empty($nodes)){
      $arr['job_title'] = $nodes->get('field_egnyte_profile__job_title')->getValue();
      $arr['first_name'] = $nodes->get('field_egnyte_profile__fname')->getValue();
      $arr['last_name'] = $nodes->get('field_egnyte_profile__lname')->getValue();
      $arr['quote'] = $nodes->get('field_egnyte_profile__testimony')->getValue();
      $arr['company'] = $nodes->get('field_egnyte_profile___company')->getValue();

      

      if ($nodes->hasField('field_egnyte_profile__comapnyimg')) {
        
          $bkrd_image = $nodes->get('field_egnyte_profile__comapnyimg')->getValue();
          
          if ($bkrd_image && !empty($bkrd_image)) {
              $entity = Media::load($bkrd_image[0]['target_id']);
              $arr['company_logo_alt'] = $bkrd_image[0]['alt'] ;
              $arr['company_logo'] = file_create_url($entity->field_media_image->entity->getFileUri()); 
          }
      }
    }
  }
    return $arr;
}