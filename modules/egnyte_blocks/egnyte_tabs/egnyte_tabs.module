<?php

/**
 * @file
 * egnyte_tabs module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\media\Entity\Media;
use Drupal\node\Entity\Node;
use Drupal\paragraphs\Entity\Paragraph;




/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function egnyte_tabs_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.egnyte_tabs':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}


/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function egnyte_tabs_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__egnyte_tabs' => [
      'base hook' => 'paragraph',
    ],
    'paragraph__egnyte_tabs_tab' => [
      'base hook' => 'paragraph',
    ],
    'paragraph__egnyte_tabs__profiles' => [
      'base hook' => 'paragraph',
    ],

    'tabs' => [
      'base hook' => 'tabs',
    ],

  ];
}



function egnyte_tabs_tab_header_function() {
  $var =  &drupal_static(__FUNCTION__);
      if (!isset($var)) {
        // generate contents of static variable
        $var = 'Default';
      }
    return $var;
}



function egnyte_tabs_preprocess_node__egnyte_page(&$variables) {


  //set this var to Global
  $arr = &drupal_static('egnyte_tabs_tab_header_function');
  $arr = array();

  //Load All content on Egnyte Webpage
  $node = $variables['elements']['#node'];

  //Store Target Id of Egnyte Page Widgets Field
  $target_id = $node->field_egnyte_page___site_blocks->target_id;

  //Load all Paragraph entities
  $paragraph_storage = \Drupal::entityTypeManager()->getStorage('paragraph');
     
  //Load all Paragraphs bundles found on current Egnyte Page
  $bundle = $paragraph_storage->load($target_id);


  //Retrieve target_id and target_revision_id of all instances of field_egnyte_tabs__items used on the current page
  $fields = $bundle->field_egnyte_tabs__items;

  foreach($fields as $num => $value){
    $arr[$num]['target_id'] = $value->target_id;
    $arr[$num]['title'] = $value->entity->field_egnyte_tabs_tab___tab_titl->value;
    $arr[$num]['icon'] = $value->entity->field_egnyte_tabs_tab__icon->target_id;
    $arr[$num]['count'] = $num + 1;

      if (!empty($value->entity->field_egnyte_tabs_tab__icon->target_id)) {
          
        $bkrd_image = $arr[$num]['icon'] ;
        
        if ($bkrd_image && !empty($bkrd_image)) {
            $entity = Media::load($bkrd_image);
            $arr[$num]['icon'] = file_create_url($entity->field_media_image->entity->getFileUri()); 
        }
      }
  }

} 

function egnyte_tabs_preprocess_paragraph__egnyte_tabs(&$variables) {
 //Only load tabs.js when paragraph bundle is used
  $variables['#attached']['library'][] =  'egnyte/tabs-block-js';

  $variables['tabs_module_path'] = drupal_get_path('module', 'egnyte_tabs');
  $tabs_tab = &drupal_static('egnyte_tabs_tab_header_function');
  $variables['tab_header'] =  $tabs_tab ;


}


/* 
 */
function egnyte_tabs_preprocess_paragraph__egnyte_tabs__profiles(&$variables) {
  
  $paragraph = $variables['elements']['#paragraph'];
  $node = $paragraph->field_egnyte_tabs__profiles->getValue();

  $variables['tab_card'][0] = _tab_profiles($node);
  $variables['job_title'] = $variables['tab_card'][0]['job_title'][0]['value'];
  $variables[ 'company'] = $variables['tab_card'][0]['company'][0]['value'];
  $variables['first_name'] = $variables['tab_card'][0]['first_name'][0]['value'];
  $variables['last_name'] = $variables['tab_card'][0]['last_name'][0]['value'];
  $variables['quote'] = $variables['tab_card'][0]['quote'][0]['value'];
  $variables['company_logo'] = $variables['tab_card'][0]['company_logo'];
  $variables['link'] = $variables['tab_card'][0]['link'];

}

 


 


function _tab_profiles($node){

  $arr= array();
  
  if (!empty($node) ){
  
   $nodes = Node::load($node[0]["target_id"]);
   
   if (!empty($nodes)){
      $arr['job_title'] = $nodes->get('field_egnyte_profile__job_title')->getValue();
      $arr['first_name'] = $nodes->get('field_egnyte_profile__fname')->getValue();
      $arr['last_name'] = $nodes->get('field_egnyte_profile__lname')->getValue();
      $arr['quote'] = $nodes->get('field_egnyte_profile__testimony')->getValue();
      $arr['company'] = $nodes->get('field_egnyte_profile___company')->getValue();
      $arr['link'] = $nodes->get('field_egnyte_profile__tlink')->getValue();


      

      if ($nodes->hasField('field_egnyte_profile__comapnyimg')) {
        
          $bkrd_image = $nodes->get('field_egnyte_profile__comapnyimg')->getValue();
          
          if ($bkrd_image && !empty($bkrd_image)) {
              $entity = Media::load($bkrd_image[0]['target_id']);
              $arr['company_logo_alt'] = $bkrd_image[0]['alt'] ;
              $arr['company_logo'] = file_create_url($entity->field_media_image->entity->getFileUri()); 
          }
      }
    }
  }
    return $arr;
}