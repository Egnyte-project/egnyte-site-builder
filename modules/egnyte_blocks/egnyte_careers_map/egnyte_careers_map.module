<?php

/**
 * @file
 * egnyte_careers_map module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\Node;
use Drupal\media\Entity\Media;






/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function egnyte_careers_map_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.egnyte_careers_map':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}



/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function egnyte_careers_map_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__egnyte_careers_map' => [
      'base hook' => 'paragraph',
    ],


  ];
}


function egnyte_career_map_preprocess_page(array &$variables) {
  $variables['#attached']['library'][] =  'egnyte/careers-map-block-js';
} 


function egnyte_careers_map_preprocess_paragraph__egnyte_careers_map(array &$variables) {
  $paragraph = $variables['elements']['#paragraph'];
  $node = $paragraph->field_egnyte_careers_map__locati->getValue();

  $variables['career_locations'] = _career_locations($node);
}

function _career_locations($node){
  $arr=[];
  $arr1=[];
 
  if (!empty($node) ){
  foreach($node as $key => $value){
   $arr1['target_id'][$key] = $value['target_id'];
   $nodes = Node::loadMultiple($arr1['target_id']);
   $alt_locations = array("poznan", "mumbai", "remote");
    foreach ($nodes as $num => $value){
      if (!empty($nodes)){
          $arr[$num]['city'] = $value->get('title')->value;
          $arr[$num] ['subtitle']= $value->get('field_egnyte_career_profile__sub')->value;
          $arr[$num]['details']= $value->get('field_egnyte_career_profiles__de')->value;
          $location = $value->get('field_egnyte_career_profiles__lo')->value;
          $arr[$num]['popup']= in_array($location, $alt_locations) ? "careers-map__popup--alt careers-map__popup--".$location : "careers-map__popup--".$location;
          $arr[$num]['pin']= "careers-map__pin--".$location;



          if ($value->hasField('field_egnyte_career_profile__img')) {
            $bkrd_image = $value->get('field_egnyte_career_profile__img')->getValue();
            if ($bkrd_image && !empty($bkrd_image)) {
              $entity = Media::load($bkrd_image[0]['target_id']);
              if (isset($entity->field_media_image->entity)) {
                $arr[$num]['image'] = file_create_url($entity->field_media_image->entity->getFileUri());
              }
            }
          } 
      }
    }
  }
}
return $arr;
}
