<?php

/**
 * @file
 * egnyte_careers_map module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\taxonomy\Entity\Term;





/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function egnyte_careers_map_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.egnyte_careers_map':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}



/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function egnyte_careers_map_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__egnyte_careers_map' => [
      'base hook' => 'paragraph',
    ],


  ];
}


function egnyte_careers_map_preprocess_paragraph__egnyte_careers_map(array &$variables) {
  $paragraph = $variables['elements']['#paragraph'];
  
}

function egnyte_careers_map_preprocess_paragraph__egnyte_careers_map__item(array &$variables) {
  $paragraph = $variables['elements']['#paragraph'];

  if ( $paragraph->get('egnyte_careers_map__item_h')->value ) {
      $variables['title'] = $paragraph->get('egnyte_careers_map__item_h')->value;
  }

  if ( $paragraph->get('egnyte_careers_map__item_t')->value ) {
      $variables['text'] = $paragraph->get('egnyte_careers_map__item_t')->value;
  }
  
}