<?php

/**
 * @file
 * egnyte_hero module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\media\Entity\Media;



/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function egnyte_hero_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.egnyte_hero':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function egnyte_hero_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__egnyte_hero' => [
      'base hook' => 'paragraph',
    ],

  ];
}

function egnyte_hero_preprocess_page(array &$variables) {
  $variables['#attached']['library'][] =  'egnyte/hero-block-js';
}

/**
 *
 */
function egnyte_hero_preprocess_paragraph__egnyte_hero(&$variables) {
  
  $paragraph = $variables['elements']['#paragraph'];
  $node = \Drupal::routeMatch()->getParameter('node');
  
  // UUID to pass for cache.
  $uuid = $variables['elements']['#paragraph']->uuid->value;

  if (!empty($node)) {
      $variables['page_title'] = $node->getTitle();
  }  


  if ( $paragraph->get('field_egnyte_hero__theme')->value) {
      $variables['theme'] = $paragraph->get('field_egnyte_hero__theme')->value;
  }

  if ($paragraph->hasField('field_egnyte_hero__image')) {
      $bkrd_image = $paragraph->get('field_egnyte_hero__image')->getValue();
      if ($bkrd_image && !empty($bkrd_image)) {
        $entity = Media::load($bkrd_image[0]['target_id']);
        if (isset($entity->field_media_image->entity)) {
          $variables['image'] = file_create_url($entity->field_media_image->entity->getFileUri());
        }
        if (isset($entity->field_media_oembed_video->value)) {
          $variables['bundle'] = $entity->bundle();
          $variables['video_url'] = $entity->field_media_oembed_video->value;
        }
       
      }
  }

 
  $variables['job_totals'] = _careers_total($uuid);

  
  

}