<?php

/**
 * @file
 * egnyte_hero module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\media\Entity\Media;
use Drupal\taxonomy\Entity\Term;
use \Drupal\Core\Url;




/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function egnyte_hero_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.egnyte_hero':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function egnyte_hero_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__egnyte_hero' => [
      'base hook' => 'paragraph',
    ],
    'engineering' => [
      'base hook' => 'egnyte_hero',
    ],
    'lifesciences' => [
      'base hook' => 'egnyte_hero',
    ],
    'microsoft' => [
      'base hook' => 'egnyte_hero',
    ],
  ];
}

function egnyte_hero_preprocess_page(array &$variables) {
  $variables['#attached']['library'][] =  'egnyte/hero-block-js';
}



/**
 *
 */
function egnyte_hero_preprocess_paragraph__egnyte_hero(&$variables) {

  $paragraph = $variables['elements']['#paragraph'];
  $node = \Drupal::routeMatch()->getParameter('node');

  // UUID to pass for cache.
  $uuid = $variables['elements']['#paragraph']->uuid->value;

  if (!empty($node)) {
      $variables['page_title'] = $node->getTitle();
  }






  // Hero Theme
    if ( $paragraph->get('field_egnyte_hero__themes')->target_id) {
        $tid = $paragraph->get('field_egnyte_hero__themes')->target_id;
        $name = Term::load($tid)->get('name')->value;
        $variables['theme'] = $name;
    }

    // Trusted Logos
    if ( $paragraph->get('field_egnyte_hero__trusted_logos')->target_id) {
      $tid = $paragraph->get('field_egnyte_hero__trusted_logos')->target_id;
      $trusted_logos = Term::load($tid)->get('name')->value;
      $variables['trusted_logos'] = $trusted_logos ;
    }

    $variables['module_path'] = drupal_get_path('module', 'egnyte_hero');

    //Hero Image/ Background Image
    if ($paragraph->hasField('field_egnyte_hero__image')) {
        $bkrd_image = $paragraph->get('field_egnyte_hero__image')->getValue();
        if ($bkrd_image && !empty($bkrd_image)) {
          $entity = Media::load($bkrd_image[0]['target_id']);
          if (isset($entity->field_media_image->entity)) {
            $variables['image_alt'] = $entity->field_media_image->alt;
            $variables['image'] = file_create_url($entity->field_media_image->entity->getFileUri());
          }
        }
    }

    //Hero video
      if ($paragraph->hasField('field_egnyte_hero__video')) {
        $bkrd_image = $paragraph->get('field_egnyte_hero__video')->getValue();
        if ($bkrd_image && !empty($bkrd_image)) {
          $entity = Media::load($bkrd_image[0]['target_id']);

          if (isset($entity->field_media_oembed_video->value)) {
            $variables['bundle'] = $entity->bundle();
            $variables['video_url'] = $entity->field_media_oembed_video->value;
          }

        }
    }

  //Video Thumbnail
    if ($paragraph->hasField('field_egnyte_hero__vid_thumbnail')) {
      $bkrd_image = $paragraph->get('field_egnyte_hero__vid_thumbnail')->getValue();
      if ($bkrd_image && !empty($bkrd_image)) {
        $entity = Media::load($bkrd_image[0]['target_id']);

        if (isset($entity->field_media_image->entity)) {
          $variables['video_thumbnail_alt'] = $entity->field_media_image->alt;
          $variables['video_thumbnail'] = file_create_url($entity->field_media_image->entity->getFileUri());
        }

      }
    }

    //Hero CTA uri
    $uri = !empty($paragraph->field_egnyte_hero__cta_link->getValue()[0]['uri']) ? $paragraph->field_egnyte_hero__cta_link->getValue()[0]['uri'] : '';

    //Hero  Link uri
    $hero_uri = !empty($paragraph->field_egnyte_hero__link->getValue()[0]['uri']) ? $paragraph->field_egnyte_hero__link->getValue()[0]['uri'] : '';


    $variables['target_blank_hero_cta'] = !empty($uri) ?_is_external($uri): '';
    $variables['target_blank_hero'] = !empty($hero_uri) ? _is_external($hero_uri) : '';

    //Job totals for Careers Page hero
    $variables['job_totals'] = _careers_total($uuid);

}

// Link External URL Information
function _is_external($uri){
  if (!empty($uri)) {
    $is_external_url = \Drupal\Core\Url::fromUri($uri)->isExternal();
    $target_blank = $is_external_url ? ' target="_blank" ' : "";
  }
  return $target_blank;
}
